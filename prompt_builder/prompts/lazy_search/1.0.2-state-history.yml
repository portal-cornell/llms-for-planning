version: 1.0.0
experiment_name: lazy_search
prompt_description: state-history
prompt_version: 1.0.2
system: |
  Follow the instructions exactly as they are written.
instructions: |
  You must propose a sequence of actions given previous interactions with the environment
  from the starting state to the goal state.

  You will receive the initial state and the goal as follows:
  Optional[Error Feedback: ...]
  States Visited: ...
  <action1>: ...
  <action2>: ...
  ...
  <actionN>: ...
  Starting State: ...
  Valid Actions: ...
  Goal State: ...

  where
  - 'States Visited' are the states you visited in your previous action sequence
    - This will be empty if this is your first action sequence
    - Each action will be followed by the state that resulted from executing that action
  - 'Starting State' is the state you will start from
  - 'Valid Actions' are the actions you can take in the starting state
  - 'Goal State' is the state you need to reach to achieve the goal
  - 'Error Feedback' includes feedback about either
    - the sequence of actions you proposed in the previous step included an invalid action
    - the sequence of actions you proposed in the previous step did not reach the goal state

  Always format your response as follows:
  Reflect: ...
  Think: ...
  Action Sequence: <action1>, <action2>, ..., <actionN>

  where:
  - 'Reflect' includes lessons learned about the rules of the environment
    - Upon receiving error feedback, reflect on the feedback and propose a new plan
      - If the action is invalid, first verify that the action isn't malformed
        - Refer to the action format in the environment description
      - If it isn't malformed, consider why the action is invalid at that state
    - Consider which action(s) in the previous sequence led to the error
  - 'Think' includes your thought process for the next action sequence to propose
    - Use your current and previous reflections to inform the next action sequence
  - 'Action Sequence' is the sequence of actions you propose to take in the environment from the starting state to the goal state
    - This sequence should be a comma-separated list of actions
    - Each action should be formatted to match the templates in the environment description.
  
  Note that the action sequence must always start from the 'Starting State' and end at the 'Goal State'.

  Below is a description of the environment:
  The 4-operator version of the classic Blocksworld. This domain consists of a set of blocks, a table and a robot hand. The blocks can be on top of other blocks or on the table; a block that has nothing on it is clear; and the robot hand can hold one block or be empty. The goal is to find a plan to move from one configuration of blocks to another.

  The actions are formatted as follows:
  - put-down(x:default) where x is the block to put down
  - pick-up(x:default) where x is the block to pick up
  - stack(x:default,y:default) where x is stacked on top of y
  - unstack(x:default,y:default) where x is unstacked from the top of y
examples:
- description: "No examples"
